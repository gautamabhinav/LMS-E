// import nodemailer from "nodemailer";

// // async .. await is not allowed in global scope , ust use a wrapper
// const sendEmail = async function (email, subject, message) {
//     // create reusable transporter object using the default SMTP transport
//     let transporter = nodemailer.createTransport({
//         host: process.env.SMTP_HOST,
//         port: process.env.SMTP_PORT,
//         secure: false, // true for 465, false for other ports
//         auth: {
//             user: process.env.SMTP_USERNAME,
//             pass: process.env.SMTP_PASSWORD,
//         },
//     });

//     // send mail with defined transport object
//     await transporter.sendMail({
//         from: process.env.SMTP_FROM_EMAIL,  // sender address
//         to: email, // user email
//         subject: subject, // Subject line
//         html: message, // html body
//     });
// }

// export default sendEmail;





// import nodemailer from "nodemailer";


// var transport = nodemailer.createTransport({
//   host: "smtp.mailtrap.io",
//   port: 2525,
//   auth: {
//     user: "1a2b3c4d5e6f7g", //example of generated by Mailtrap 
//     pass: "1a2b3c4d5e6f7g" //example of generated by Mailtrap 
//   }
// });
 
// var mailOptions = {
//   from: 'from@example.com',
//   to: 'test@example.com',
//   subject: 'Test Nodemailer with Mailtrap',
  
//   html: '<h1>Attachments</h1>',
//   attachments: [
//     {   // utf-8 string as an attachment
//         filename: 'text.txt',
//         content: 'Attachments'
//     },
// 	{
// 		filename: 'logo',
// 		path: 'newlogo.png'
// 	}
//   ]
// };
 
// transport.sendMail(mailOptions, (error, info) => {
//   if (error) {
//     return console.log(error);
//   }
//   console.log('Email sent: ' + info.response);
// });


import nodemailer from "nodemailer";

const sendEmail = async function (email, subject, message) {
  try {
    let transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST,
      port: process.env.SMTP_PORT,
      secure: false,
      auth: {
        user: process.env.SMTP_USERNAME,
        pass: process.env.SMTP_PASSWORD,
      },
    });

    const mailOptions = {
      from: process.env.SMTP_FROM_EMAIL,
      to: email,
      subject: subject,
      html: message,
    };

    const info = await transporter.sendMail(mailOptions);
    console.log("Email sent successfully!", info.response);
    return { success: true, message: "Email sent successfully!" };
  } catch (error) {
    console.error("Error occurred:", error.message);
    return { success: false, message: "Failed to send email." };
  }
};

export default sendEmail;